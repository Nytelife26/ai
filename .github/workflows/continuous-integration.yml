name: Continuous Integration

env:
  DEBUG: napi:*
  APP_NAME: ai
  MACOSX_DEPLOYMENT_TARGET: '10.13'

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - LICENSE
      - '**/*.gitignore'
      - .editorconfig
  pull_request:

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      fail-fast: false
      matrix:
        - os: macos-latest
          target: x86_64-apple-darwin
          architecture: x64
          build: |
            yarn build
            strip -x *.node
        - os: windows-latest
          build: yarn build
          target: x86_64-pc-windows-msvc
          architecture: x64
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
          docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-debian
          build: |-
            set -e &&
            yarn build --target x86_64-unknown-linux-gnu &&
            strip *.node
        - os: ubuntu-latest
          target: x86_64-unknown-linux-musl
          docker: ghcr.io/napi-rs/napi-rs/nodejs-rust:lts-alpine
          build: set -e && yarn build && strip *.node
        - os: macos-latest
          target: aarch64-apple-darwin
          build: |
            sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*;
            export CC=$(xcrun -f clang);
            export CXX=$(xcrun -f clang++);
            SYSROOT=$(xcrun --sdk macosx --show-sdk-path);
            export CFLAGS="-isysroot $SYSROOT -isystem $SYSROOT";
            yarn build --target aarch64-apple-darwin
            strip -x *.node
    name: stable - ${{ matrix.target }} - node@16
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Use Node.js v${{ matrix.node }}
        uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # tag=v3
        if: ${{ !matrix.docker }}
        with:
          node-version: 16
          cache: yarn
          architecture: ${{ matrix.architecture }}
      - name: Install
        uses: actions-rs/toolchain@v1
        if: ${{ !matrix.docker }}
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache/registry/index/
            .cargo-cache/registry/cache/
            .cargo-cache/git/db/
            target/
          key: ${{ matrix.target }}-cargo-${{ matrix.os }}
      - name: Setup toolchain
        run: ${{ matrix.setup }}
        if: ${{ matrix.setup }}
        shell: bash
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build in docker
        uses: addnab/docker-run-action@v3
        if: ${{ matrix.docker }}
        with:
          image: ${{ matrix.docker }}
          options: '--user 0:0 -v ${{ github.workspace }}/.cargo-cache/git/db:/root/.cargo/git/db -v ${{ github.workspace }}/.cargo/registry/cache:/root/.cargo/registry/cache -v ${{ github.workspace }}/.cargo/registry/index:/root/.cargo/registry/index -v ${{ github.workspace }}:/build -w /build'
          run: ${{ matrix.build }}
      - name: Build
        run: ${{ matrix.build }}
        if: ${{ !matrix.docker }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.target }}
          path: ${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  test-macOS-windows-binding:
    name: Test bindings on ${{ matrix.target }} - node@${{ matrix.node }}
    needs: build
    strategy:
      fail-fast: false
      matrix:
        - os: windows-latest
          target: x86_64-pc-windows-msvc
        node: [16, 18]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Use Node.js v${{ matrix.node }}
        uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --immutable
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: bindings-${{ matrix.target }}
          path: .
      - name: List packages
        run: ls -R .
        shell: bash
      - name: Test bindings
        run: yarn test

  test-linux-x64-gnu-binding:
    name: Test bindings on Linux-x64-gnu - node@${{ matrix.node }}
    needs: build
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Use Node.js v${{ matrix.node }}
        uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --immutable
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: bindings-x86_64-unknown-linux-gnu
          path: .
      - name: List packages
        run: ls -R .
        shell: bash
      - name: Test bindings
        run: docker run --rm -v $(pwd):/build -w /build node:${{ matrix.node }}-slim yarn test

  test-linux-x64-musl-binding:
    name: Test bindings on x86_64-unknown-linux-musl - node@${{ matrix.node }}
    needs: build
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Use Node.js v${{ matrix.node }}
        uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # tag=v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn
      - name: Install dependencies
        run: yarn install --immutable
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: bindings-x86_64-unknown-linux-musl
          path: .
      - name: List packages
        run: ls -R .
        shell: bash
      - name: Test bindings
        run: docker run --rm -v $(pwd):/build -w /build node:${{ matrix.node }}-alpine yarn test

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [test-macOS-windows-binding, test-linux-x64-gnu-binding, test-linux-x64-musl-binding]
    steps:
      - name: Checkout Project
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
      - name: Install dependencies
        run: yarn install --immutable
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Move artifacts
        run: yarn artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Publish
        run: |
          if git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --access public
          elif git log -1 --pretty=%B | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            npm publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
